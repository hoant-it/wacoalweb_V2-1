#!/usr/bin/env node

/**
 * Module dependencies.
 */

 var app = require('../app');
 var debug = require('debug')('webmain:server');
 var http = require('http');
 
 /**
  * Get port from environment and store in Express.
  */
 
 var port = normalizePort(process.env.PORT);
 app.set('port', port);
 
 /**
  * Create HTTP server.
  */
 
 var server = http.createServer(app);
 var io = require("socket.io")(server);
 /**
  * Listen on provided port, on all network interfaces.
  */
 /**
  * Event listener for HTTP server "listening" event.
  */
 
 const onListening=() => {
   const addr = server.address();
   const bind = typeof addr === 'string'
     ? 'pipe ' + addr
     : 'port ' + addr.port;
   console.log(`Listening on ${bind}`  );
 }
 
 /**
  * Event listener for HTTP server "error" event.
  */
 
 const onError=(error) => {
   if (error.syscall !== 'listen') {
     throw error;
   }
 
   var bind = typeof port === 'string'
     ? 'Pipe ' + port
     : 'Port ' + port;
 
   // handle specific listen errors with friendly messages
   switch (error.code) {
     case 'EACCES':
       console.error(bind + ' requires elevated privileges');
       process.exit(1);
       break;
     case 'EADDRINUSE':
       console.error(bind + ' is already in use');
       process.exit(1);
       break;
     default:
       throw error;
   }
 }
 
 server.listen(port);
 server.on('error', onError);
 server.on('listening', onListening);
 
 // ket noi socket det server
 io.on("connection", function(socket){
   console.log("co nguoi ket noi " +socket.id);
 
   // ngat ket noi socket
   socket.on("disconnect", function() {
     console.log("co nguoi ngat ket noi " +socket.id);
   });
 
   // lang nghe tu client
   socket.on("Client-send-data", function(data) {
   // console.log(data);
   //server tra ve ket qua den  tat ca cac client
   io.sockets.emit("Server-send-data",data);
 
   //server chi tra ve ket qua den client gui socket
   // socket.emit("Server-send-data", data +' 888');
 
   // server gui ket qua den tat ca client tru client gui len server
   // socket.broadcast.emit("Server-send-data", data +' 888')
 
   // server gui ket qua den client dc chi dinh
   // io.to("dasdasfsdf").emit();
    //"dasdasfsdf" lÃ  id soket cua client muon chuyen den
   });
 
   socket.on("Client-send-status", function(data){
     io.sockets.emit("Server-send-status",data);
 
   })
 
   socket.on("Client-send-click",function(data) {
     io.sockets.emit("Server-send-click",data);
   })
 
 
 
 })
 
 /**
  * Normalize a port into a number, string, or false.
  */
 
 function normalizePort(val) {
   var port = parseInt(val, 10);
 
   if (isNaN(port)) {
     // named pipe
     return val;
   }
 
   if (port >= 0) {
     // port number
     return port;
   }
 
   return false;
 }
 
 
 
 
 